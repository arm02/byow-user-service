// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/companies/all": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Find All Companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyListResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies/create": {
            "post": {
                "description": "Register a new company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Create Company",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Cemerlang Jaya",
                        "description": "Company Name",
                        "name": "company_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"john@company.com\"",
                        "description": "Company Email",
                        "name": "company_email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "628112123123",
                        "description": "Company Phone",
                        "name": "company_phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"123 Cemerlang St, Tech City\"",
                        "description": "Company Address",
                        "name": "company_address",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Company Logo",
                        "name": "company_logo",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyRequestSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/companies/{id}": {
            "get": {
                "description": "Get company details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Get Company By ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"60d5ec49f1c2b14c88f3c5e5\"",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyRequestSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/change-email": {
            "post": {
                "description": "Change user email using OTP verification",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change Email With OTP",
                "parameters": [
                    {
                        "description": "OTP \u0026 New Email",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/change-email/send-otp": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Send OTP Change Email",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/change-password-old": {
            "post": {
                "description": "Change user password using old password",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change Password With Old Password",
                "parameters": [
                    {
                        "description": "Email, Old Password \u0026 New Password",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswordWithOldPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/change-phone": {
            "post": {
                "description": "Change user phone using OTP verification",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change Phone With OTP Email",
                "parameters": [
                    {
                        "description": "OTP \u0026 New Email",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePhoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/change-phone/send-otp": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Send OTP Change Email",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Logout user",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "description": "Check if user is logged in and return user info",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Check Logged Account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/onboard": {
            "get": {
                "description": "Onboard user to the system",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Onboarded User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/update": {
            "post": {
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Full name",
                        "name": "full_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "john@example.com",
                        "description": "Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar file",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/change-password-otp": {
            "post": {
                "description": "Change user password using OTP verification",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change Password With OTP",
                "parameters": [
                    {
                        "description": "Email, OTP \u0026 New Password",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/forgot-password/send-otp": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP Forgot Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/login": {
            "post": {
                "description": "User login with email and password. Credentials are validated for format and security.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Validation errors or invalid JSON format",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidationErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or unverified account",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/register": {
            "post": {
                "description": "Register a new user with avatar. All fields are validated for security and format requirements.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"John Doe\"",
                        "description": "Full name (2-100 chars, letters/spaces/hyphens only)",
                        "name": "full_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"john@example.com\"",
                        "description": "Valid email address",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"SecurePass123!\"",
                        "description": "Strong password (8+ chars, mixed case, numbers, symbols)",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"628112123123\"",
                        "description": "Valid phone number (E.164 format)",
                        "name": "phone_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar image file (max 10MB, JPEG/PNG/GIF only)",
                        "name": "avatar",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidationErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email or phone already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/verification/users/send-otp": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Send OTP Verification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/verification/users/verify-otp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Email \u0026 OTP",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ChangeEmailRequest": {
            "type": "object",
            "properties": {
                "new_email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "otp": {
                    "type": "string",
                    "example": "000000"
                }
            }
        },
        "dto.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "otp": {
                    "type": "string",
                    "example": "000000"
                },
                "password": {
                    "type": "string",
                    "example": "newpassword"
                }
            }
        },
        "dto.ChangePasswordWithOldPasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "newpassword"
                },
                "old_password": {
                    "type": "string",
                    "example": "oldpassword"
                }
            }
        },
        "dto.ChangePhoneRequest": {
            "type": "object",
            "properties": {
                "new_phone": {
                    "type": "string",
                    "example": "628112123123"
                },
                "otp": {
                    "type": "string",
                    "example": "000000"
                }
            }
        },
        "dto.CompanyListResponseSwagger": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CompanyResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                }
            }
        },
        "dto.CompanyRequestSwagger": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/dto.CompanyResponse"
                },
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                }
            }
        },
        "dto.CompanyResponse": {
            "type": "object",
            "properties": {
                "company_address": {
                    "type": "string",
                    "example": "123 BuildYow St, Tech City"
                },
                "company_email": {
                    "type": "string",
                    "example": "info@buildyow.com"
                },
                "company_id": {
                    "type": "string",
                    "example": "60c72b2f9b1e8c001c8e4d3a"
                },
                "company_logo": {
                    "type": "string",
                    "example": "https://assets/images/company_logo.jpg"
                },
                "company_name": {
                    "type": "string",
                    "example": "BuildYow"
                },
                "company_phone": {
                    "type": "string",
                    "example": "628112123123"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-10-01T12:00:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "60c72b2f9b1e8c001c8e4d3a"
                },
                "verified": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dto.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "VALIDATION_ERROR"
                },
                "details": {},
                "message": {
                    "type": "string",
                    "example": "Validation failed"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "data": {
                    "$ref": "#/definitions/dto.ErrorResponseData"
                },
                "error": {
                    "$ref": "#/definitions/dto.ErrorDetail"
                },
                "status": {
                    "type": "string",
                    "example": "ERROR"
                }
            }
        },
        "dto.ErrorResponseData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "INTERNAL_SERVER_ERROR"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "arm.adrian02@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "masukaja123"
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string",
                    "example": "https://assets/images/img.jpg"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "on_boarded": {
                    "type": "boolean",
                    "example": false
                },
                "phone_number": {
                    "type": "string",
                    "example": "628112123123"
                },
                "token": {
                    "type": "string",
                    "example": "token"
                },
                "verified": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dto.UserResponseSwagger": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/dto.UserResponse"
                },
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                }
            }
        },
        "dto.ValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "email"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email format"
                }
            }
        },
        "dto.ValidationErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "VALIDATION_ERROR"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidationError"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Validation failed"
                }
            }
        },
        "dto.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "$ref": "#/definitions/dto.ValidationErrorDetail"
                },
                "status": {
                    "type": "string",
                    "example": "ERROR"
                }
            }
        },
        "dto.VerifyOTPRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "otp": {
                    "type": "string",
                    "example": "000000"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Build Your Own Website User Service API",
	Description:      "This is the user service for the Byow app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
